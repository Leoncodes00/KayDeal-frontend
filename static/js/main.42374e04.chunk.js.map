{"version":3,"sources":["logo.svg","Home/Item.component.js","Home/Homepage.js","Sell/SellForm.js","Sign-in/Signin.js","Sign-in/Signup.js","Settings/UserInfo.js","Settings/Messages.js","Settings/Settings.js","MessageSeller/MessageSeller.js","Your-Items/YourItemComponent.js","Your-Items/YourItems.js","Edit/EditItems.js","MessageSeller/MessageBuyer.js","Settings/UserInfoEdit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ItemComponent","props","setUpMessageSeller","userId","history","push","getUserId","setUpEditItem","id","itemIdForEdit","className","href","this","item","image","target","alt","name","price","localStorage","getItem","user_id","toString","onClick","React","Component","withRouter","Homepage","renderItems","items","map","SellForm","handleImg","e","setState","imgLink","value","handleName","console","log","state","handlePrice","handleSubmit","preventDefault","fetch","headers","method","body","JSON","stringify","buyer_id","onSubmit","onChange","type","Signin","handleUsername","username","handlePassword","password","then","resp","json","data","info","setLoggedIn","placeholder","Signup","handleEmail","email","res","UserInfo","user","Messages","getBuyerId","getUserSeller","sellerId","deleteMessage","message","Settings","renderUserData","isLoggedIn","renderMessages","messages","content","deleteUser","clear","window","location","style","marginTop","MessageSeller","handlePhone","phone","handleMessage","event","thisUserId","YourItemComponent","deleteItem","YourItems","renderUser","EditItems","imgLinkHandler","itemId","thisItemId","itemNameHandler","priceHandler","MessageBuyer","thisBuyerId","UserInfoEdit","App","userData","setLocalStorage","setItem","buyerId","to","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42374e04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./ItemStyles.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  withRouter\n} from \"react-router-dom\";\n\nclass ItemComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  setUpMessageSeller = userId => {\n    this.props.history.push(\"/message-seller\");\n    this.props.getUserId(userId);\n  };\n\n  setUpEditItem = id => {\n    this.props.history.push(\"/edit-item\");\n    this.props.itemIdForEdit(id);\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <a href={this.props.item.image} target=\"_blank\" alt=\"Image Link\">\n          Image Link\n        </a>\n        <div className=\"card-container\">\n          <h4>\n            <b>Name: {this.props.item.name}</b>\n          </h4>\n          <p>Price: {this.props.item.price}</p>\n          {localStorage.getItem(\"userId\") ===\n          this.props.item.user_id.toString() ? (\n            <button onClick={() => this.setUpEditItem(this.props.item.id)}>\n              Edit item\n            </button>\n          ) : (\n            <button\n              onClick={() => this.setUpMessageSeller(this.props.item.user_id)}\n            >\n              Message seller\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ItemComponent);\n","import React, { Component } from \"react\";\nimport ItemComponent from \"./Item.component\";\n\nexport class Homepage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  renderItems = () => {\n    return this.props.items.map(item => (\n      <ItemComponent\n        item={item}\n        itemIdForEdit={this.props.itemIdForEdit}\n        getUserId={this.props.getUserId}\n      />\n    ));\n  };\n  render() {\n    return <div>{this.renderItems()}</div>;\n  }\n}\n\nexport default Homepage;\n","import React, { Component } from \"react\";\n\nexport class SellForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      imgLink: \"\",\n      name: \"\",\n      price: \"\"\n    };\n  }\n\n  handleImg = e => {\n    return this.setState({\n      imgLink: e.target.value\n    });\n  };\n\n  handleName = e => {\n    return this.setState(\n      {\n        name: e.target.value\n      },\n      () => console.log(this.state.name)\n    );\n  };\n\n  handlePrice = e => {\n    return this.setState({\n      price: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/items\", {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: \"POST\",\n      body: JSON.stringify({\n        user_id: localStorage.getItem(\"userId\"),\n        buyer_id: null,\n        image: this.state.imgLink,\n        name: this.state.name,\n        price: this.state.price\n      })\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"form-style-6\">\n        <h1>Sell Item</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Image link:\n            <input\n              onChange={this.handleImg}\n              type=\"text\"\n              value={this.state.imgLink}\n            />\n          </label>\n          <label>\n            Name:\n            <input\n              onChange={this.handleName}\n              value={this.state.name}\n              type=\"text\"\n            />\n          </label>\n          <label>\n            Price:\n            <input\n              onChange={this.handlePrice}\n              value={this.state.price}\n              type=\"text\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SellForm;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\nexport class Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  handleUsername = e => {\n    return this.setState({\n      username: e.target.value\n    });\n  };\n  handlePassword = e => {\n    return this.setState({\n      password: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch(`http://localhost:3000/users`)\n      .then(resp => resp.json())\n      .then(data => {\n        data.map(info =>\n          info.name === this.state.username &&\n          info.password === this.state.password\n            ? this.props.setLoggedIn(info)\n            : console.log(\"blah\")\n        );\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"login-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"login-box\">\n            <h1>Login</h1>\n            <div className=\"textbox\">\n              <i className=\"fas fa-user\"></i>\n              <input\n                value={this.state.username}\n                onChange={this.handleUsername}\n                type=\"text\"\n                placeholder=\"Username\"\n              />\n            </div>\n\n            <div className=\"textbox\">\n              <i className=\"fas fa-lock\"></i>\n              <input\n                value={this.state.password}\n                onChange={this.handlePassword}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n\n            <input type=\"submit\" className=\"btn\" value=\"Sign in\" />\n            <input\n              onClick={() => this.props.history.push(\"/sign-up\")}\n              type=\"button\"\n              className=\"btn\"\n              value=\"Sign up\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signin);\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\nexport class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  }\n  handleUsername = e => {\n    return this.setState({\n      username: e.target.value\n    });\n  };\n  handleEmail = e => {\n    return this.setState({\n      email: e.target.value\n    });\n  };\n  handlePassword = e => {\n    return this.setState({\n      password: e.target.value\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/users\", {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: \"POST\",\n      body: JSON.stringify({\n        name: this.state.username,\n        password: this.state.password,\n        email: this.state.email\n      })\n    }).then(res =>\n      res.json().then(json => {\n        this.props.setLoggedIn(json);\n      })\n    );\n  };\n  render() {\n    return (\n      <div className=\"login-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"login-box\">\n            <h1>Sign up</h1>\n            <div className=\"textbox\">\n              <i className=\"fas fa-user\"></i>\n              <input\n                onChange={this.handleUsername}\n                value={this.state.username}\n                type=\"text\"\n                placeholder=\"Username\"\n              />\n            </div>\n\n            <div className=\"textbox\">\n              <i className=\"fas fa-envelope-square\"></i>\n              <input\n                onChange={this.handleEmail}\n                value={this.state.email}\n                type=\"text\"\n                placeholder=\"Email\"\n              />\n            </div>\n\n            <div className=\"textbox\">\n              <i className=\"fas fa-lock\"></i>\n              <input\n                onChange={this.handlePassword}\n                value={this.state.password}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n\n            <input type=\"submit\" className=\"btn\" value=\"Sign up\" />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport \"./UserInfoPage.css\";\n\nclass UserInfo extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"user-info-container\">\n        <p>Username: {this.props.user.name}</p>\n        <p>Email: {this.props.user.email}</p>\n      </div>\n    );\n  }\n}\nexport default withRouter(UserInfo);\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\nexport class Messages extends Component {\n  constructor(props) {\n    super(props);\n  }\n  getBuyerId = () => {\n    this.props.getUserSeller(this.props.sellerId);\n    this.props.history.push(\"/message-buyer\");\n  };\n  deleteMessage = () => {\n    fetch(`http://localhost:3000/messages/${this.props.id}`, {\n      method: \"DELETE\"\n    });\n  };\n  render() {\n    return (\n      <div className=\"user-info-container\">\n        <p>{this.props.message}</p>\n        <button onClick={() => this.getBuyerId()}>Reply</button>\n        <button onClick={() => this.deleteMessage()}>Delete message</button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Messages);\n","import React, { Component } from \"react\";\nimport UserInfo from \"./UserInfo\";\nimport Messages from \"./Messages\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\n\nexport class Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: [],\n      messages: []\n    };\n    fetch(`http://localhost:3000/users/${this.props.userId}`)\n      .then(resp => resp.json())\n      .then(data => {\n        console.log(data);\n        this.setState({\n          user: data,\n          messages: data.messages\n        });\n      });\n  }\n\n  renderUserData = () => {\n    return (\n      <UserInfo user={this.state.user} isLoggedIn={this.props.isLoggedIn} />\n    );\n  };\n\n  renderMessages = () => {\n    return this.state.messages.map(message => (\n      <Messages\n        message={message.content}\n        id={message.id}\n        sellerId={message.buyer_id}\n        getUserSeller={this.props.getUserSeller}\n      />\n    ));\n  };\n\n  deleteUser = () => {\n    fetch(`http://localhost:3000/users/${localStorage.getItem(\"userId\")}`, {\n      method: \"DELETE\"\n    })\n      .then(localStorage.clear())\n      .then((window.location = \"/sign-in\"));\n  };\n\n  render() {\n    return (\n      <div className=\"grid-container\">\n        <header className=\"header-dashboard\">Account Information</header>\n        <aside className=\"sidenav\">\n          <ul className=\"sidenav__list\">\n            <li\n              onClick={() => this.props.history.push(\"/edit-user\")}\n              className=\"sidenav__list-item\"\n            >\n              Edit account info\n            </li>\n            <li\n              onClick={() => this.deleteUser()}\n              className=\"sidenav__list-item\"\n            >\n              Delete account\n            </li>\n          </ul>\n        </aside>\n        <main className=\"main-header\">\n          <div className=\"main-header__heading\">\n            Hello {localStorage.getItem(\"username\")}\n            <div style={{ marginTop: \"10px\" }} className=\"main-header__heading\">\n              {this.renderUserData()}\n            </div>\n            <div style={{ marginTop: \"60px\" }} className=\"main-header__heading\">\n              List of messages\n            </div>\n            <div style={{ marginTop: \"10px\" }} className=\"main-header__heading\">\n              {this.renderMessages()}\n            </div>\n          </div>\n        </main>\n        <footer className=\"footer\"></footer>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Settings);\n","import React, { Component } from \"react\";\nimport \"./MessageSeller.css\";\n\nexport class MessageSeller extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      phone: \"\",\n      message: \"\"\n    };\n  }\n\n  handleName = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  handlePhone = e => {\n    this.setState({\n      phone: e.target.value\n    });\n  };\n\n  handleMessage = e => {\n    this.setState({\n      message: e.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"bruh\");\n    fetch(`http://localhost:3000/messages`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: \"POST\",\n      body: JSON.stringify({\n        user_id: this.props.thisUserId,\n        buyer_id: localStorage.getItem(\"userId\"),\n        content: `Name: ${this.state.name} Phone#: ${this.state.phone} Message: ${this.state.message}`\n      })\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"form-style-6\">\n        <h1>Contact Seller</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name:\n            <input\n              onChange={this.handleName}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n            />{\" \"}\n            <br />\n          </label>\n          <label>\n            Phone Number:\n            <input\n              onChange={this.handlePhone}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.phone}\n            />{\" \"}\n            <br />\n          </label>\n          <label>\n            Message:\n            <textarea\n              onChange={this.handleMessage}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.message}\n            />{\" \"}\n            <br />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MessageSeller;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  withRouter\n} from \"react-router-dom\";\n\nclass YourItemComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  deleteItem = () => {\n    fetch(`http://localhost:3000/items/${this.props.info.id}`, {\n      method: \"DELETE\"\n    });\n  };\n  render() {\n    return (\n      <div className=\"card\">\n        <a href={this.props.info.image} target=\"_blank\" alt=\"Image Link\">\n          Image Link\n        </a>\n        <div className=\"card-container\">\n          <h4>\n            <b>Name: {this.props.info.name}</b>\n          </h4>\n          <p>Price: {this.props.info.price}</p>\n          {localStorage.getItem(\"userId\") ===\n          this.props.info.user_id.toString() ? (\n            <div>\n              <button onClick={() => this.props.history.push(\"/edit-item\")}>\n                Edit item\n              </button>\n              <button onClick={() => this.deleteItem()}>Delete</button>\n            </div>\n          ) : (\n            <button\n              onClick={() => this.setUpMessageSeller(this.props.info.user_id)}\n            >\n              Message seller\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(YourItemComponent);\n","import React, { Component } from \"react\";\nimport YourItemComponent from \"./YourItemComponent\";\n\nexport class YourItems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: []\n    };\n    fetch(`http://localhost:3000/users/${localStorage.getItem(\"userId\")}`)\n      .then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          user: data.items\n        })\n      );\n  }\n\n  renderUser = () => {\n    return this.state.user.map(info => {\n      return (\n        <div>\n          <YourItemComponent info={info} />\n        </div>\n      );\n    });\n  };\n\n  render() {\n    return <div>{this.renderUser()}</div>;\n  }\n}\n\nexport default YourItems;\n","import React, { Component } from \"react\";\n\nexport class EditItems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: \"\",\n      name: \"\",\n      price: \"\"\n    };\n  }\n\n  imgLinkHandler = event => {\n    event.preventDefault();\n    this.setState({\n      image: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(this.props.itemId);\n    fetch(`http://localhost:3000/items/${this.props.thisItemId}`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: \"PATCH\",\n      body: JSON.stringify({\n        user_id: localStorage.getItem(\"userId\"),\n        buyer_id: null,\n        image: this.state.image,\n        name: this.state.name,\n        price: this.state.price\n      })\n    });\n  };\n\n  itemNameHandler = event => {\n    event.preventDefault();\n    return this.setState(\n      {\n        name: event.target.value\n      },\n      () => {\n        console.log(this.state.name);\n      }\n    );\n  };\n\n  priceHandler = event => {\n    event.preventDefault();\n    return this.setState(\n      {\n        price: event.target.value\n      },\n      () => {\n        console.log(this.state.price);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-style-6\" onSubmit={this.handleSubmit}>\n          <h1>Edit Item</h1>\n          <label>\n            Image Link:\n            <input\n              type=\"text\"\n              onChange={this.imgLinkHandler}\n              value={this.state.image}\n            />\n          </label>\n          <br />\n          <label>\n            Item Name:\n            <input\n              type=\"text\"\n              onChange={this.itemNameHandler}\n              value={this.state.name}\n            />\n          </label>\n          <br />\n          <label>\n            Price:\n            <input\n              type=\"text\"\n              onChange={this.priceHandler}\n              value={this.state.price}\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditItems;\n","import React, { Component } from \"react\";\nimport \"./MessageSeller.css\";\n\nexport class MessageBuyer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      phone: \"\",\n      message: \"\"\n    };\n  }\n\n  handleName = e => {\n    this.setState({\n      name: e.target.value\n    });\n  };\n\n  handlePhone = e => {\n    this.setState({\n      phone: e.target.value\n    });\n  };\n\n  handleMessage = e => {\n    this.setState({\n      message: e.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    console.log(this.props.thisBuyerId);\n    fetch(`http://localhost:3000/messages`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: \"POST\",\n      body: JSON.stringify({\n        user_id: this.props.thisBuyerId,\n        buyer_id: localStorage.getItem(\"userId\"),\n        content: `Name: ${this.state.name}, Phone #: ${this.state.phone}, message: ${this.state.message}`\n      })\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-style-6\" onSubmit={this.handleSubmit}>\n          <h1>Reply</h1>\n          <label>\n            Name:\n            <input\n              onChange={this.handleName}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n            />{\" \"}\n            <br />\n          </label>\n          <label>\n            Phone Number:\n            <input\n              onChange={this.handlePhone}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.phone}\n            />{\" \"}\n            <br />\n          </label>\n          <label>\n            Message:\n            <textarea\n              onChange={this.handleMessage}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.message}\n            />{\" \"}\n            <br />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default MessageBuyer;\n","import React, { Component } from \"react\";\n\nexport class UserInfoEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    };\n  }\n\n  handleUsername = e => {\n    this.setState({\n      username: e.target.value\n    });\n  };\n\n  handleEmail = e => {\n    this.setState({\n      email: e.target.value\n    });\n  };\n\n  handlePassword = e => {\n    this.setState({\n      password: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    fetch(`http://localhost:3000/users/${localStorage.getItem(\"userId\")}`, {\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n      method: \"PUT\",\n      body: JSON.stringify({\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password\n      })\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form className=\"form-style-6\" onSubmit={this.handleSubmit}>\n          <h1>Edit user information</h1>\n          <label>\n            Username:\n            <input\n              onChange={this.handleUsername}\n              value={this.state.username}\n              type=\"text\"\n              name=\"name\"\n            />\n          </label>\n          <label>\n            Email:\n            <input\n              onChange={this.handleEmail}\n              value={this.state.email}\n              type=\"text\"\n              name=\"name\"\n            />\n          </label>\n          <label>\n            Password:\n            <input\n              onChange={this.handlePassword}\n              value={this.state.password}\n              type=\"password\"\n              name=\"name\"\n            />\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default UserInfoEdit;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  withRouter\n} from \"react-router-dom\";\nimport Homepage from \"./Home/Homepage\";\nimport SellForm from \"./Sell/SellForm\";\nimport Signin from \"./Sign-in/Signin\";\nimport Signup from \"./Sign-in/Signup\";\nimport Settings from \"./Settings/Settings\";\nimport MessageSeller from \"./MessageSeller/MessageSeller\";\nimport YourItems from \"./Your-Items/YourItems\";\nimport EditItems from \"./Edit/EditItems\";\nimport MessageBuyer from \"./MessageSeller/MessageBuyer\";\nimport UserInfoEdit from \"./Settings/UserInfoEdit\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      userData: [],\n      isLoggedIn: false,\n      username: \"\",\n      userId: \"\",\n      thisUserId: \"\",\n      thisItemId: \"\",\n      thisBuyerId: \"\"\n    };\n  }\n  componentDidMount() {\n    fetch(`http://localhost:3000/items`)\n      .then(resp => resp.json())\n      .then(data => {\n        return this.setState({\n          items: data\n        });\n      });\n    if (localStorage.getItem(\"isLoggedIn\") === \"true\") {\n      this.setState({\n        isLoggedIn: true,\n        userId: localStorage.getItem(\"userId\")\n      });\n    }\n  }\n\n  setLoggedIn = userData => {\n    window.location = \"/\";\n    this.setState(\n      {\n        isLoggedIn: !this.state.isLoggedIn,\n        userId: userData.id,\n        username: userData.name\n      },\n      () => this.setLocalStorage(userData.id)\n    );\n  };\n\n  setLocalStorage = id => {\n    localStorage.setItem(\"isLoggedIn\", \"true\");\n    localStorage.setItem(\"userId\", id);\n    localStorage.setItem(\"username\", this.state.username);\n  };\n\n  getUserId = userId => {\n    this.setState({\n      thisUserId: userId\n    });\n  };\n\n  itemIdForEdit = id => {\n    this.setState({\n      thisItemId: id\n    });\n  };\n\n  getUserSeller = buyerId => {\n    this.setState({\n      thisBuyerId: buyerId\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"header\">\n          <Router>\n            {this.state.isLoggedIn === true ? (\n              <nav className=\"header-nav\">\n                <ul>\n                  <li>\n                    <h3>Kaydeal</h3>\n                  </li>\n                  <Link to=\"/settings\">\n                    <i id=\"settings-icon\" className=\"fas fa-cog\"></i>\n                  </Link>\n                  <li>\n                    <Link to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/sell\">Sell</Link>\n                  </li>\n                  <li>\n                    <Link to=\"/your-items\">Your Items</Link>\n                  </li>\n                  <li>\n                    <Link\n                      onClick={() =>\n                        this.setState(\n                          {\n                            isLoggedIn: !this.state.isLoggedIn\n                          },\n                          () => localStorage.clear()\n                        )\n                      }\n                      to=\"/sign-in\"\n                    >\n                      Sign out\n                    </Link>\n                  </li>\n                </ul>\n              </nav>\n            ) : (\n              <nav className=\"header-nav\">\n                <ul>\n                  <li>\n                    <h3>Kaydeal</h3>\n                  </li>\n                </ul>\n              </nav>\n            )}\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <Homepage\n                  {...props}\n                  itemIdForEdit={this.itemIdForEdit}\n                  getUserId={this.getUserId}\n                  items={this.state.items}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/sell\"\n              render={props => <SellForm {...props} />}\n            />\n            <Route exact path=\"/your-items\" />\n            <Route\n              exact\n              path=\"/sign-in\"\n              render={props => (\n                <Signin setLoggedIn={this.setLoggedIn} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/sign-up\"\n              render={props => (\n                <Signup setLoggedIn={this.setLoggedIn} {...props} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/settings\"\n              render={props => (\n                <Settings\n                  {...props}\n                  username={this.state.username}\n                  userId={this.state.userId}\n                  isLoggedIn={this.state.isLoggedIn}\n                  getUserSeller={this.getUserSeller}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/message-seller\"\n              render={props => (\n                <MessageSeller {...props} thisUserId={this.state.thisUserId} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/your-items\"\n              render={props => <YourItems {...props} />}\n            />\n            <Route\n              exact\n              path=\"/edit-item\"\n              render={props => (\n                <EditItems {...props} thisItemId={this.state.thisItemId} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/message-buyer\"\n              render={props => (\n                <MessageBuyer {...props} thisBuyerId={this.state.thisBuyerId} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/edit-user\"\n              render={props => <UserInfoEdit {...props} />}\n            />\n          </Router>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}